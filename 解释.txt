ResultSet.next():利用ResultSet对象的next()方法，该方法相当于表中的一个指针，初始时是指向表中第一行数据的上方，每调用一次该方法，
	就会判断下一行是否有值，如果有，指针向下移动指向下一行，并返回true，若没有，则返回false

//链接数据库步骤	
1 注册驱动(DriverManager)
	两种方式
	DriverManager.registerDriver(new com.mysql.jdbc.Driver()); //注册了两次 浪费性能
	Class.forName(className);
2 获取数据库的连接对象(Connection)
3 获取SQL语句的执行对象(Statement)
4 使用Statement对象去执行SQL
5 使用ResultSet对象保存查询到结果,处理结果
6 释放资源

公共类：
	1 注册驱动 
	2 获取数据库连接 
	3 将获取数据库链接提出公共的方法
	注意：注册驱动的创建公共类的时候就已经完成了
		  注册驱动两种方式 一种反射 一种直接实例化（浪费性能 注册两次）
dao的实现：
	1 创建公共类
	2 调用获取链接的方法
	3 获取执行sql语句的对象
	4 执行sql语句
	5 使用结果集查看接口ResultSet
	重点：
		演示 查询 增加 修改******
